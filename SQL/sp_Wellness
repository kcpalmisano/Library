USE [DATABASE]
GO
/****** Object:  StoredProcedure [SCHEMA].[sp_Wellness_flags]    Script Date: 
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
	Author:		Casey Palmisano
	Notes:		This SP populates a table for flag creation of Wellness warnings and disenrollments
	Updates:	Active No Appt criteria  Line 86 & 113 Updated by Casey P on Nicole R recommendation DATE
	****		Added eligibility criteria Lines 133 thru 139 Updated by Casey P on Brenda P recommendation DATE

*/

Create procedure [SCHEMA].[sp_Wellness_flags]
AS
BEGIN

	set nocount on;

	----BEGIN actual stored procedure 

Drop table if exists #WELLNESS;

SELECT  distinct *, 
CAST (funds_dateactive as date) as funds_date_active,
CASE WHEN (five_star) = 'ACP' THEN 'ADVANTAGE CARE PHYSICIANS'   --create column to help with abbreviation identification of 5star facilities
		WHEN (five_star) = 'ATRIUS' THEN 'ATRIUS HEALTH' 
		WHEN (five_star) = 'AVENEL' THEN 'AVENEL ISELIN'
		WHEN (five_star) = 'CAMBRIDGE' THEN 'CAMBRIDGE HEALTH ALLIANCE CENTER'
		WHEN (five_star) = 'CRYSTAL' THEN 'CRYSTAL RUN HEALTHCARE'
		WHEN (five_star) = 'EAST BOSTON' THEN 'EAST BOSTON NEIGHBORHOOD HEALTH CENTER'
		WHEN (five_star) = 'EVERSIDE' THEN 'Everside Health'
		WHEN (five_star) = 'FOREST' THEN 'FOREST HILLS'
		WHEN (five_star) = 'GEISINGER' THEN 'GEISINGER HEALTH SYSTEM'
		WHEN (five_star) = 'IFH' THEN 'INSTITUTE FOR FAMILY HEALTH'
		WHEN (five_star) = 'PREMIER' THEN 'PREMIER MEDICAL ASSOCIATES'
		WHEN (five_star) = 'PROHEALTH' THEN 'PROHEALTH PHYSICIANS'
		WHEN (five_star) = 'RIVERDALE' THEN 'RIVERDALE FAMILY PRACTICE'
		WHEN (five_star) = 'SANITAS' THEN 'SANITA MEDICAL CENTER'
		WHEN (five_star) = 'SUMMIT' THEN 'SUMMIT HEALTH'
		WHEN (five_star) = 'UHC' THEN 'THE UNION HEALTH CENTER'
		WHEN (five_star) = 'WESTMED' THEN 'WESTMEND MEDICAL GROUP'
			ELSE NULL END AS FiveStar_Facility,
		 CAST(NULL as DATE) as [date],					--- add date column for tracking
		 CAST(NULL AS varchar) AS [JobId]				--- add jobid column for tracking
	INTO #WELLNESS							--- drop into temp table for first part
FROM (SELECT DISTINCT person_id, funds_sourcename
		, [funds_dateactive] 
		, funds_disease1name
		, funds_facilityname
		, funds_outreach
		, funds_warningdate
    	FROM DATABASE.SCHEMA.funds_enrollment 
    	WHERE funds_programname = 'Wellness' and statuscodename = 'Participating' AND statecodename = 'Active') a   --Get the members that are in Wellness, active, and participating
	LEFT JOIN ( Select distinct ClaimNr
					, PERSON_ID as claim_personID
					,  PaidDate
					, ServiceStartDate
					, ServiceEndDate
					, ClaimEntryDate
					, HealthCardId
					, RenderingName
					, BillingNPI
					, BillingName
					, BillingTaxId
					, GroupNr
				from SCHEMA.ClaimsData 
				where ServiceStartDate >= '2019-01-01' ) b  --GETDATE() - 1460) b   --4 year date range (currently)  
		ON a.person_id = b.claim_personID
	LEFT Join (Select distinct (person_id) as fs_personid, prov_tax_id ,five_star FROM SCHMEA.FIVE_STAR_ATTRIBUTION_MP) c  --see the member's most recent 5 star visit 
		ON b.BillingTaxId = c.prov_tax_id and a.person_id = c.fs_personid
	LEFT JOIN (select [funds_fein] FROM [SERVER].[DATABASE].[SCHEMA].[funds_providerorganization] ) fp
		ON fp.funds_fein = b.billingTaxID;

		
---tax id for 5starcenters is in  [DATABASE].[SCHEMA].[funds_providerorganization] in [funds_fein]

Drop table if exists #well1; 
--create temp table with warning flags
 SELECT *							 
		   --six months outside 5star usage =warning
	,Case WHEN BillingTaxId = funds_fein    ---comparing tax id
			OR FiveStar_Facility IS NULL
			AND funds_date_active < getdate() - 180 
			OR ServiceStartDate < getdate() - 180 
	THEN 1 ELSE 0 END AS Warn_OutsideUsage 
			 --six months active no appt =warning
	,Case when datediff(day, funds_date_active, getdate()) >180    ----Is this date accurate/ useful ??? 
			AND ServiceStartDate IS NULL						   --Criteria updated by Casey P on Nicole R recommendation
	THEN 1 ELSE 0 END as Warn_ActiveNoApt
			 --nine months no recent usage =warn
	,Case when datediff(day, funds_date_active, getdate()) >270 
			AND datediff(day, ServiceStartDate, getdate()) >270 THEN 1 ELSE 0 END as Warn_NoUsage
		     --Warning to have member switch back
	,Case WHEN BillingTaxId = funds_fein
			OR FiveStar_Facility IS NULL
			AND datediff(day, funds_date_active, getdate()) >180 
			AND datediff(day, ServiceStartDate, getdate()) >180
	THEN 1 ELSE 0 END AS Warn_Switch
 INTO #well1
 FROM #WELLNESS


 Drop table if exists #well2; 

 --create temp table with disenrollment flags
 Select  *				
 			--nine months outside 5star usage =disenrollment
	,Case when BillingTaxId = funds_fein
		OR FiveStar_Facility IS NULL
		AND	datediff(day, funds_date_active, getdate()) >270
		AND Warn_outsideusage = 1    ----look in funds enrollment
	THEN 1 ELSE 0 END AS DisEn_OutsideUsage	
			--nine months active no appt =disenrollment
	,Case when datediff(day, funds_date_active, getdate()) >270  
		AND ServiceStartDate IS NULL             --Criteria updated by Casey P on Nicole R recommendation
		AND	Warn_ActiveNoApt = 1 
	THEN 1 ELSE 0 END as DisEn_ActiveNoApt	
			--twelve months no recent usage =disenroll
	,Case when datediff(day, funds_date_active, getdate()) >365  
		AND	datediff(day, ServiceStartDate, getdate()) >365
		AND Warn_ActiveNoApt = 1 
	THEN 1 ELSE 0 END as DisEn_NoUsage	
 into #well2
 from #well1;


Drop table if exists #eligtmp; 

select  a.*, LEFT(a.ELIGIBILITY_MONTH, CHARINDEX(' ', a.ELIGIBILITY_MONTH + ' ') -1) as Elg_Month, 
       STUFF(a.ELIGIBILITY_MONTH, 1, Len(a.ELIGIBILITY_MONTH) +1- CHARINDEX(' ',Reverse(a.ELIGIBILITY_MONTH)), '') as Elg_Year
	   INTO #eligtmp
from [SCHEMA].[ELIGIBILITY_BY_MONTH_V3] a



Drop table if exists #elgtemp;  ----change months to numbers in new column ELIG_Month

select *, 
	 case WHEN Elg_Month = 'JAN' THEN 1
		  WHEN Elg_Month = 'FEB' THEN 2
		  WHEN Elg_Month = 'MAR' THEN 3
	      	  WHEN Elg_Month = 'APR' THEN 4
		  WHEN Elg_Month = 'MAY' THEN 5
		  WHEN Elg_Month = 'JUN' THEN 6
		  WHEN Elg_Month = 'JUL' THEN 7
		  WHEN Elg_Month = 'AUG' THEN 8
		  WHEN Elg_Month = 'SEP' THEN 9
		  WHEN Elg_Month = 'OCT' THEN 10
		  WHEN Elg_Month = 'NOV' THEN 11
		  WHEN Elg_Month = 'DEC' THEN 12
	 ELSE NULL END AS ELIG_Month
	 INTO #elgtemp
	from #eligtmp;

	drop table #WELLNESS;
	Drop table #eligtmp; 
	drop table #well1;


--drop table [SCHEMA].[Wellness_flags];	
Truncate table [SCHEAM].[Wellness_flags];						  --clear table of previous data

INSERT INTO [DATABASE].[SCHEMA].[Wellness_flags]		  --put information for #well2 into final table for use
	 Select distinct w.person_id
	 , e.ELIG_Month
	 , e.Elg_Year
	 , e.Medical_Hospital
	 , Warn_OutsideUsage
	 , Warn_ActiveNoApt
	 , Warn_NoUsage
	 , Warn_Switch
	 , DisEn_OutsideUsage
	 , DisEn_ActiveNoApt
	 , DisEn_NoUsage
	 , funds_warningdate
	 , funds_sourcename
	 , funds_disease1name
	 , funds_facilityname
	 , ClaimNr
	 , PaidDate
	 , ServiceStartDate
	 , ServiceEndDate
	 , ClaimEntryDate
	 , HealthCardId
	 , RenderingName
	 , BillingNPI
	 , BillingName
	 , BillingTaxId
	 , GroupNr
	 , fs_personid
	 , prov_tax_id
	 , five_star
	 , funds_date_active
	 , FiveStar_Facility
	 , [date]
	 , JobId
		--INTO [DATABASE].[SCHEMA].[Wellness_flags]	
		from #well2 w
			LEFT join #elgtemp e
				--select * count(distinct( ELIGIBILITY_MONTH)) as count, PERSON_ID
				 --from #elgtemp
				-- where ELIG_Month >= month(getdate()) -2 and Elg_Year = YEAR(getdate())   ----  Use for Pulling in Eligibility for past two months 
				-- and MEDICAL_HOSPITAL = 'Empire'		
					--Group BY PERSON_ID
					--Having count(distinct ELIGIBILITY_MONTH) >= 3) e
			 on e.PERSON_ID = w.person_id
			 where ClaimNr IS NOT NULL			 
			 and YEAR(ServiceStartDate) = Elg_Year     --- these 2 lines minimize the data to only the eligibity year and month based on Service Start Date
			 and MONTH(ServiceStartDate) = ELIG_Month OR MONTH(ServiceStartDate) - 2 = ELIG_Month;
			 
			 
			 
END
